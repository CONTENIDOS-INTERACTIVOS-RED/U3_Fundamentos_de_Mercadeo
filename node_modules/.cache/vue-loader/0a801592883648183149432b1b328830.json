{"remainingRequest":"/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/pug-plain-loader/index.js!/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/src/views/curso/Tema3.vue?vue&type=template&id=7a83bf2c&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/src/views/curso/Tema3.vue","mtime":1755583572500},{"path":"/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fundamentos_de_Mercadeo/U3_Fundamentos_de_Mercadeo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}